#!/bin/bash

# groutes greps routes
#
# the first time you run routes it runs bin/rails routes and caches it and
# greps that. if you update config/routes.rb, groutes _knows_ and rebuilds
# the cache.
#
# usage:
#   $ groutes username
#                username GET     /:username(.:format)                              dashboards#show
#          username_feeds GET     /:username/feeds(.:format)                        feeds#index
#    username_group_feeds GET     /:username/groups/:group/feeds(.:format)          groups#feeds
#           username_feed GET     /:username/feeds/:id(.:format)                    feeds#show
#                         GET     /:username/dashboards/:dashboard_id(.:format)     dashboards#show
#      username_dashboard GET     /:username/:dashboard_id(.:format)                dashboards#show
#
# if you ctrl-c, you'll probably have to delete the cache files and start over
#   $ rm .rails_routes*
#
# add the two cache files to .gitignore
#   $ echo .rails_routes* >> .gitignore

if [ ! -f Rakefile -o ! -f config/routes.rb ]; then
  echo "groutes will only work in rails project directories :("
  exit 1
fi

if [ ! -f .rails_routes~ ]; then
  echo "generate routes because cache doesn't exist"
  bin/rails routes > .rails_routes~
fi

if [ ! -f .rails_routes_rb~ ]; then
  echo "regenerate routes because config/routes.rb is newer than cache"
  cp config/routes.rb .rails_routes_rb~
  bin/rails routes > .rails_routes~
else
  diff -q config/routes.rb .rails_routes_rb~
  diff_status=$?

  if [ "$diff_status" -ne 0 ]; then
    echo "regenerate routes because config/routes.rb doesn't match previous version"
    cp config/routes.rb .rails_routes_rb~
    bin/rails routes > .rails_routes~
  fi
fi

cat .rails_routes~ | grep $@ | sed 's/{.*}//g;s/^[ \t]\{0,6\}//'
